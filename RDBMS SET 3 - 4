Set: 1

1. Create the Simple DEPARTMENT Table.
CREATE TABLE dept1(  dept_no NUMBER(5), dept_name varchar(20), location varchar(10) );
*********************************************************************
*********************************************************************
*********************************************************************
2. Display structure of department table.
desc dept1;
*********************************************************************
*********************************************************************
*********************************************************************
3. Insert below records into Department Table.

INSERT INTO dept1 VALUES(10,'Account','NY');
INSERT INTO dept1 VALUES(20,'HR','NY');
INSERT INTO dept1 VALUES(30,'Production','DL');
INSERT INTO dept1 VALUES(40,'Sales','NY');
INSERT INTO dept1 VALUES(50,'EDP','MU');
INSERT INTO dept1 VALUES(60,'TRG','AH');
INSERT INTO dept1 VALUES(110,'RND','');
*********************************************************************
*********************************************************************
*********************************************************************
4. Display all records of Department table.

Select * from dept1;
*********************************************************************
*********************************************************************
*********************************************************************
5. Display all department belonging to location 'NY'.
select * from dept1 WHERE location = 'NY' ;
 *********************************************************************
*********************************************************************
*********************************************************************
6. Display details of Department 10.
select * from dept1 where dept_no = 10;
*********************************************************************
*********************************************************************
*********************************************************************
7. List all department names starting with 'A'.
select * from dept1 where dept_name like ‘A%’;
*********************************************************************
*********************************************************************
********************************************************************* 
8. List all departments whose number is between 1 and 100.
select * from dept1 where dept_no between 1 and 100;
*********************************************************************
*********************************************************************
*********************************************************************
9. Delete 'TRG' department.
delete from dept1 where dept_name  = 'TRG';
*********************************************************************
*********************************************************************
*********************************************************************
10. Change department name 'EDP' to 'IT’.
update dept1 set dept_name = 'IT' where dept_name = 'EDP';
*********************************************************************
*********************************************************************
*********************************************************************
*********************************************************************
*********************************************************************
*********************************************************************
						SET: 2
1. Create the EMP Table with all necessary constraints such as in EMP TABLE: Employee id should be primary key, Department no should be foreign key, employee age (birthdate) should be greater than 18 years, salary should be greater than zero, email should have (@ and dot) sign in address, designation of employee can be “manager”, “clerk”, “leader”, “analyst”, “designer”, “coder”, “tester”. 

CREATE TABLE EMPLOYEE1
(
empid int primary key,
emp_name varchar(50),
birth_date date,
gender varchar(10),
dept_no int,
address varchar(100),
designation varchar(15) check(designation IN ('manager', 'clerk', 'leader', 'analyst', 'designer', 'coder','tester')),
salary int check(salary > 0),
experience int,
email varchar(23) check(email like '%@%.%'),
constraint dept_no foreign key (dept_no) references DEPARTMENT (dept_no)
);
*********************************************************************
*********************************************************************
*********************************************************************

2. Create DEPT table with neccessary constraint such as Department no should be primary key, department name should be unique.
CREATE TABLE DEPARTMENT1
(
dept_no int primary key,
dept_name varchar(50) unique,
location varchar(15)
); 

*********************************************************************
*********************************************************************
*********************************************************************
4.After creation of above tables, modify Employee table by adding the constraints as
5. ‘Male’ or ‘Female’ in gender field and display the structure.

alter table EMPLOYEE1 add constraints check_gender check(gender in ('Male','Female'));
*********************************************************************
*********************************************************************
*********************************************************************
6. Insert proper data (at least 5 appropriate records) in all the tables.
Employee1
•	insert into employee1(empid, emp_name, birth_date, gender, dept_no, address, designation, salary,experience, email) values (1,'Raj','23-Jun-1999','Male',1010,'Sahara Darwaja','manager',48950,25,'rajpatel@gmail.com');
•	insert into employee1(empid, emp_name, birth_date, gender, dept_no, address, designation, salary,experience, email) values (2,'Amit','23-Apr-1999','Male',2020,'Amroli','clerk',2800,15,'amitkumar@gmail.com');
•	insert into employee1(empid, emp_name, birth_date, gender, dept_no, address, designation, salary,experience, email) values (3,'Jenisha','23-Mar-1998','Female',3030,'Gurugram','leader',4900,10,'jeishapatel@gmail.com');
•	insert into employee1(empid, emp_name, birth_date, gender, dept_no, address, designation, salary,experience, email) values (4,'Samantha','23-Feb-1999','Female',4040,'Ring Road','analyst',15000,1,'samprabhu@gmail.com');
•	insert into employee1(empid, emp_name, birth_date, gender, dept_no, address, designation, salary,experience, email) values (5,'Mukesh','23-Jan-1999','Male',5050,'Elish Bridge','tester',36200,18,'ambani@gmail.com');
•	insert into employee1(empid, emp_name, birth_date, gender, dept_no, address, designation, salary,experience, email) values (6,'Vipul','23-Dec-1999','Male',6060,'Baben','coder',48950,25,'vipulshah@gmail.com');
Department1
•	insert into department(dept_no,dept_name,locations) values (1010,'Sales','Surat');
•	insert into department(dept_no,dept_name,locations) values (2020,'Devloping','Vapi');
•	insert into department(dept_no,dept_name,locations) values (3030,'Designing','Vyara');
•	insert into department(dept_no,dept_name,locations) values (4040,'Finance','Navsari');
•	insert into department(dept_no,dept_name,locations) values (5050,'Marketing','Ahmedabad');
•	insert into department(dept_no,dept_name,locations) values (6060,'IT','Bardoli');
*********************************************************************
*********************************************************************
*********************************************************************
7. Describe the structure of table created

desc EMPLOYEE1						desc DEPARTMENT
*********************************************************************
*********************************************************************
*********************************************************************
8. List all records of each table in ascending order.
Select * from employee1 order by empid;
 
Select * from department1 order by dept_no; 
*********************************************************************
*********************************************************************
*********************************************************************
9. Delete the department whose location is Ahmedabad.
Delete from department where location = ‘Ahmedabad’;
*********************************************************************
*********************************************************************
*********************************************************************
10. Display the female employee list.
 Select * from employee1 where gender = ‘Female’;
 *********************************************************************
*********************************************************************
*********************************************************************
11.Display the employee department wise.
  Select empid,emp_name,dept_no from employee order by dept_no;
*********************************************************************
*********************************************************************
*********************************************************************
12. Find the names of the employee who has salary less than 5000 and greater than 2000
Select emp_name, salary from employee1 where salary < 5000 and salary > 2000;
 *********************************************************************
*********************************************************************
*********************************************************************
13. Display the names and the designation of all female employee in descending order.
SELECT EMP_NAME,DESIGNATION FROM EMPLOYEE1 WHERE GENDER IN('Female') order by emp_name
*********************************************************************
*********************************************************************
*********************************************************************

14. Display the names of all the employees who names starts with ‘S’ ends with ‘a’.
select emp_name As "Employee Name" from employee1 where emp_name LIKE('S%a')
*********************************************************************
*********************************************************************
*********************************************************************
15. Find the name of employee and salary for those who had obtain minimum salary.
select emp_name,salary from employee1 where salary = (select min(salary) from employee1) 
*********************************************************************
*********************************************************************
*********************************************************************
16. Add 10% raise in salary of all employees whose department is ‘IT’.
update employee1 set salary = (salary +(salary/10)) where dept_no =(select dept_no from department1 where dept_name = 'IT');
*********************************************************************
*********************************************************************
*********************************************************************
17. Count total number of employees of ‘IT’ department.
select count(empid) as ‘Employee of IT Department’ from employee1 where dept_no =( select dept_no from department1 where dept_name = 'IT')
 *********************************************************************
*********************************************************************
*********************************************************************
18. List all employees who born in the current month.
Select * from employee1 where TO_CHAR(birth_date, 'MM') = TO_CHAR(CURRENT_DATE, 'MM');
 *********************************************************************
*********************************************************************
*********************************************************************
19. Print the record of employee and dept table as “Employee works in department ‘MBA’.
select e.emp_name||' works in department '||d.dept_name as Records from employee1 e,department1 d where e.dept_no=d.dept_no;
 *********************************************************************
*********************************************************************
*********************************************************************
20. List names of employees who are fresher’s (less than 1 year of experience)
select emp_name, experience as "Experience Month Wise" from employee1 where experience < 12;
 
******************************************************************************************************************************************
******************************************************************************************************************************************
******************************************************************************************************************************************
******************************************************************************************************************************************
******************************************************************************************************************************************

*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
SET: 3
1. 1. Create the above three tables along with key constraints.

==>

create table STUDENT
(rollno int primary key, 
sname varchar(20),
class varchar(20), 
birthdate date
)

create table COURSE 
(courseno int primary key, 
coursename varchar(22), 
max_marks int, 
pass_marks int
)


create table stdcourse
(
rollno int foreign key, 
courseno int foreign key, 
marks int
)

*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************

2. Write an Insert script for insertion of rows with substitution variables and insert appropriate data.

insert into student(rollno, sname, class, birthdate) values (1,'Raj Patel','A','23-Jun-99')
insert into student(rollno, sname, class, birthdate) values (2,'Sristi Patel','A','25-Apr-99')
insert into student(rollno, sname, class, birthdate) values (3,'Smit Shah','B','10-Mar-01')
insert into student(rollno, sname, class, birthdate) values (4,'Amit Singh','B','11-Feb-97')
insert into student(rollno, sname, class, birthdate) values (5,'Pirjada Abarar','C','25-Dec-98')
insert into student(rollno, sname, class, birthdate) values (6,'Naveen Panjala','D','16-Sep-00')
insert into student(rollno, sname, class, birthdate) values (7,'Jenish Taniya','C','03-Jul-01')
insert into student(rollno, sname, class, birthdate) values (8,'Ashita Patel','C','03-Aug-01')
insert into student(rollno, sname, class, birthdate) values (9,'Dhriti Taniya','C','03-Feb-02')
insert into student(rollno, sname, class, birthdate) values (10,'Sristi Avaiya','C','03-May-01')
insert into student(rollno, sname, class, birthdate) values (11,'Vipul Patel','C','03-May-80')
insert into student(rollno, sname, class, birthdate) values (12,'Sorathiya Sameer','C','03-May-82')

insert into course values(101,'python','100','36');
insert into course values(102,'dbms','50','15');
insert into course values(103,'com_network','70','26');
insert into course values(104,'data_structure','60','36');
insert into course values(105,'java','90','20');

insert into stdcourse(rollno, courseno, marks) values (1,101,76)
insert into stdcourse(rollno, courseno, marks) values (1,102,86)
insert into stdcourse(rollno, courseno, marks) values (2,103,36)
insert into stdcourse(rollno, courseno, marks) values (3,104,56)
insert into stdcourse(rollno, courseno, marks) values (4,105,56)
insert into stdcourse(rollno, courseno, marks) values (5,101,40)
insert into stdcourse(rollno, courseno, marks) values (6,102,20)
insert into stdcourse(rollno, courseno, marks) values (7,103,96)
insert into stdcourse(rollno, courseno, marks) values (8,104,56)
insert into stdcourse(rollno, courseno, marks) values (9,105,86)
insert into stdcourse(rollno, courseno, marks) values (10,101,66)


*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************

3. Add a constraint that the marks entered should strictly be between 0 and 100.

ALTER TABLE stdcourse
ADD CONSTRAINT marks check( marks > 0 AND marks < 100);


*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************


4.While creating SC table, composite key constraint was forgotten. Add the composite
keynow. 
==>
ALTER TABLE stdcourse
ADD CONSTRAINT composite primary key(rollno,courseno); 

*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************

5.Display details of student who takes ‘Database Management System’ course.
=>

select * from student where rollno IN (select rollno from stdcourse where courseno = (select courseno from course where coursename = 'dbms') )

*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************


6. Display the names of students who have scored more than 70% in Computer
Networksand have not failed in any subject.

select stdcourse.rollno, coursename, student.sname from course,stdcourse,student 
where stdcourse.courseno = course.courseno and marks > 70 and coursename='com_network' and 
stdcourse.rollno not in
  (select rollno from stdcourse, course where marks < course.pass_marks)
 and student.rollno= stdcourse.rollno order by rollno;
 
 
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
7.Display the average marks obtained by each student.

select student.sname , AVG(stdcourse.marks) from student , stdcourse where student.rollno = stdcourse.rollno group by student.sname


*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
*********************************************************************************************************************************
8.Select all courses where passing marks are more than 30% of average maximum mark.

select  * from course where pass_marks > 30 * (select avg(max_marks) from course)/100
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
9.Displaydetails of students who arebornin 1980 or 1982.

select * from student where EXTRACT(Year FROM birthdate) = 1982 or EXTRACT(Year FROM birthdate) = 1980 

**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
10.Create a view that displays student courseno and its corresponding marks

create view jenview as select 



**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************




SET :4

**********************************************************************************************************************************
**********************************************************************************************************************************
Department Table ::

Create table DEPARTMENT
(
dept_no int primary key, 
dept_name varchar(20), 
total_employees int, 
location varchar(20)
)


insert into DEPARTMENT (dept_no, dept_name, total_employees, location ) values( 101,'MCA',10,'Surat');
insert into department values(102,'CE',15,'Navsari');
insert into department values(103,'CIVIL',20,'Daman');
insert into department values(104,'ELECTRICAL',25,'Silvasa');
insert into department values(105,'AUTOMOBILE',5,'Vapi');
insert into department values(106,'IT',0,'PUNE');

**********************************************************************************************************************************
**********************************************************************************************************************************
Employee Table

CREATE table EMPLOYEE 
(
emp_id int primary key, 
emp_name varchar(20),
birth_date date,
gender varchar(10) check(gender IN ('OTHER', 'Other', 'FEMALE', 'Female', 'male','MALE')),
dept_no int,
address varchar(50), 
designation varchar(20),
salary int,
experience float,
email varchar(30) check(email like '%@%.%'),
constraint dept_no foreign key (dept_no) references DEPARTMENT (dept_no)
)

insert into EMPLOYEE values(1,'Raj','23-june-1999','male',101,'Surat','Manager',15600,3,'rpatel@gmail.com');
insert into EMPLOYEE values(2,'Amisha','13-july-1998','Female',101,'Vapi','CEO',35600,1.2,'apatel@gmail.com');
insert into EMPLOYEE values(3,'Naveen','3-june-1990','male',101,'Daman','MD',45600,0.2,'npatel@gmail.com');
insert into EMPLOYEE values(4,'Jenish','1-may-1989','male',101,'Valsad','AD',5600,1.9,'jpatel@gmail.com');
insert into EMPLOYEE values(5,'Smit','25-aug-1982','male',101,'Silvasa','Developer',35600,5.5,'spatel@gmail.com');
insert into EMPLOYEE values(6,'Shyam','23-june-1999','male',102,'Surat','Manager',11600,1,'rpatel@gmail.com');
insert into EMPLOYEE values(7,'Chanchal','13-july-1998','Female',102,'Vapi','CEO',36600,2.2,'apatel@gmail.com');
insert into EMPLOYEE values(8,'Tanu','3-june-1990','Female',102,'Daman','MD',25600,3.2,'npatel@gmail.com');
insert into EMPLOYEE values(9,'Mukesh','1-may-1989','male',102,'Valsad','AD',20300,4.9,'jpatel@gmail.com');
insert into EMPLOYEE values(10,'Parth','25-aug-1982','male',102,'Silvasa','Developer',10600,10.5,'spatel@gmail.com');
insert into EMPLOYEE values(11,'Ghanshyam','23-june-1999','male',102,'Surat','Manager',22600,1,'rpatel@gmail.com');
insert into EMPLOYEE values(12,'Era','13-july-1998','Female',102,'Vapi','CEO',23600,2.2,'apatel@gmail.com');
insert into EMPLOYEE values(13,'Radha','3-june-1990','Female',102,'Daman','MD',19600,3.2,'npatel@gmail.com');
insert into EMPLOYEE values(14,'Amish','1-may-1989','male',103,'Valsad','AD',50360,4.9,'jpatel@gmail.com');
insert into EMPLOYEE values(15,'Pinkesh','25-aug-1982','male',103,'Silvasa','Developer',95600,10.5,'spatel@gmail.com');
insert into EMPLOYEE values(16,'Hiren','23-june-1999','male',104,'Surat','Manager',55600,1,'rpatel@gmail.com');
insert into EMPLOYEE values(17,'Sonalika','13-july-1998','Female',104,'Vapi','CEO',65600,2.2,'apatel@gmail.com');
insert into EMPLOYEE values(18,'Mahi','3-june-1990','Female',104,'Daman','MD',85600,3.2,'npatel@gmail.com');
insert into EMPLOYEE values(19,'Pinku','1-may-1989','male',104,'Valsad','AD',12600,4.9,'jpatel@gmail.com');
insert into EMPLOYEE values(20,'Gogi','25-aug-1982','male',105,'Silvasa','Developer',18600,10.5,'spatel@gmail.com');
*********************************************************** ***********************************************************************
**********************************************************************************************************************************

Project Table

Create table PROJECT
(
proj_id int,
type_of_project varchar(20),
status varchar(20),
start_date date,
constraint emp_id foreign key (emp_id) references EMPLOYEE(emp_id)
)

insert into Project values(1001,'On Site','Pending','23-Oct-2020',1);
insert into Project values(1002,'At Office','IN Proccess','23-Nov-2018',2);
insert into Project values(1003,'On Site','Complated','23-Jan-2021',3);
insert into Project values(1004,'At Office','Debuging','23-Mar-2015',4);
insert into Project values(1001,'On Site','Pending','23-Oct-2020',5);
insert into Project values(1002,'At Office','IN Proccess','23-Nov-2018',6);
insert into Project values(1003,'On Site','Complated','23-Jan-2021',7);
insert into Project values(1004,'At Office','Debuging','23-Mar-2015',8);
insert into Project values(1001,'On Site','Pending','23OctDec-2020',9);
insert into Project values(1002,'At Office','IN Proccess','23-Nov-2018',10);
insert into Project values(1003,'On Site','Complated','23-Jan-2021',11);
insert into Project values(1004,'At Office','Debuging','23-Mar-2015',12);
insert into Project values(1001,'On Site','Pending','23-Oct-2020',13);
insert into Project values(1002,'At Office','IN Proccess','23-Nov-2018',14);
insert into Project values(1003,'On Site','Complated','23-Jan-2021',15);
insert into Project values(1004,'At Office','Debuging','23-Mar-2015',16);
insert into Project values(1001,'On Site','Pending','23-Oct-2020',17);
insert into Project values(1002,'At Office','IN Proccess','23-Nov-2018',18);
insert into Project values(1003,'On Site','Complated','23-Jan-2021',19);
insert into Project values(1004,'At Office','Debuging','23-Mar-2015',20);

**********************************************************************************************************************************
**********************************************************************************************************************************


1. Delete the department whose total number of employees less than 1.

delete from department where total_employees < 1;

**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************

2. Display the names and the designation of all female employee in descending order.
 
 select emp_name ,designation from employee where gender = 'Female' order by emp_name DESC;
 
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
3.Display the names of all the employees who names starts with ‘A’ ends with ‘A’.
  
select emp_name from employee where emp_name like 'A%a';
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
  4.Find the name of employee and salary for those who had obtain minimum salary.
   
 select emp_name,salary from employee where salary in(select  min(salary)from employee group by dept_no);

**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
5.Count total number of employees of ‘MCA’ department.

select dept_name,total_employees from department where dept_name = 'MCA';


**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************

6.Add 10% raise in salary of all employees whose department is ‘CIVIL’

update employee set salary = salary +(( salary /100)*10) where dept_no = (select dept_no from department where dept_name = 'CIVIL')

**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
7. List all employees who born in the current month.
select * from employee where extract(month from birth_date ) = (SELECT TO_CHAR (SYSDATE, 'MM') FROM DUAL );

**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
8. Print the record of employee and dept table as “Employee works in department ‘CE’.
select emp.emp_name,emp.dept_no,dept.dept_name from employee emp,department dept where dept.dept_no = emp.dept_no and dept.DEPT_NAME = 'CE';
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
9. List names of employees who are fresher’s(less than 1 year of experience).
 select emp_name, EXPERIENCE from employee where EXPERIENCE <= 1;
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
10.List department wise names of employees who has more than 5 years of experience. 

select emp.emp_name, emp.dept_name,emp.experience from employee emp,department dept where dept.dept_no = emp.dept_no and emp.experience > 5;

**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************

11.Write a procedure that will display list of projects which is going to start today. 

**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************

12.
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
13.
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************

14.
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************

SET : 5

create table HOSTEL 
(
HNO int primary key, 
HNAME varchar, 
HADDR varchar, 
TOTAL_CAPACITY int , 
WARDEN varchar(20)
)
insert into hostel(HNO, HNAME, HADDR, TOTAL_CAPACITY, WARDEN) values(1,'Suman Nivas','ADAJAN',25,'Jamandas Ghariwala');
insert into hostel(HNO, HNAME, HADDR, TOTAL_CAPACITY, WARDEN) values(2,'Chhagan Nivas','Rander',50,'Ramaniklal Chunawala');
insert into hostel(HNO, HNAME, HADDR, TOTAL_CAPACITY, WARDEN) values(3,'Magan Nivas','CityLight',75,'Chunilal Gajiwala');
insert into hostel(HNO, HNAME, HADDR, TOTAL_CAPACITY, WARDEN) values(4,'Gagan Nivas','Parle Point',100,'Chhabildas Gheewala');
insert into hostel(HNO, HNAME, HADDR, TOTAL_CAPACITY, WARDEN) values(5,'Jagat Nivas','Athwa Lines',120,'ChimanLal Jariwala');
**********************************************************************************************************************************
**********************************************************************************************************************************

create table ROOM 
(
HNO int, 
RNO int primary key , 
RTYPE varchar(20),
LOCATION varchar(20), 
NO_OF_STUDENTS int,
STATUS varchar(20),
constraints hno foreign key (HNO) references HOSTEL(HNO)
)

insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (1,11,'double-seated','First Floor',13,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (1,12,'single-seated','Second Floor',3,'vacant');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (1,13,'double-seated','Third Floor',5,'non occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (1,14,'single-seated','Forth Floor',22,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (1,15,'double-seated','Fifth Floor',1,'occupied');

insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (2,21,'single-seated','First Floor',19,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (2,22,'double-seated','Second Floor',13,'vacant');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (2,23,'single-seated','Third Floor',10,'non occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (2,24,'double-seated','Forth Floor',12,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (2,25,'single-seated','Fifth Floor',50,'occupied');

insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (3,31,'double-seated','First Floor',31,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (3,32,'single-seated','Second Floor',30,'vacant');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (3,33,'double-seated','Third Floor',20,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (3,34,'single-seated','Forth Floor',40,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (3,35,'double-seated','Fifth Floor',33,'occupied');

insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (4,41,'single-seated','First Floor',3,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (4,42,'double-seated','Second Floor',5,'vacant');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (4,43,'single-seated','Third Floor',11,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (4,44,'double-seated','Forth Floor',32,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (4,45,'single-seated','Fifth Floor',23,'occupied');

insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (5,51,'double-seated','First Floor',13,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (5,52,'single-seated','Second Floor',23,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (5,53,'double-seated','Third Floor',33,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (5,54,'single-seated','Forth Floor',3,'occupied');
insert into ROOM (HNO, RNO, RTYPE, LOCATION, NO_OF_STUDENTS,STATUS) values (5,55,'double-seated','Fifth Floor',10,'vacant');
**********************************************************************************************************************************
**********************************************************************************************************************************
Create Table CHARGES 
(
HNO int, 
RTYPE varchar(20), 
CHARGES int,
constraints hno foreign key (HNO) references HOSTEL(HNO)
);
insert into CHARGES (HNO, RTYPE, CHARGES) values (1,'double-seated',1000);
insert into CHARGES (HNO, RTYPE, CHARGES) values (1,'single-seated',1500);


insert into CHARGES (HNO, RTYPE, CHARGES) values (2,'double-seated',2000);
insert into CHARGES (HNO, RTYPE, CHARGES) values (2,'single-seated',2500);


insert into CHARGES (HNO, RTYPE, CHARGES) values (3,'double-seated',3000);
insert into CHARGES (HNO, RTYPE, CHARGES) values (3,'single-seated',3500);


insert into CHARGES (HNO, RTYPE, CHARGES) values (4,'double-seated',4000);
insert into CHARGES (HNO, RTYPE, CHARGES) values (4,'single-seated',4500);


insert into CHARGES (HNO, RTYPE, CHARGES) values (5,'double-seated',5000);
insert into CHARGES (HNO, RTYPE, CHARGES) values (5,'single-seated',5500);

**********************************************************************************************************************************
**********************************************************************************************************************************
Create table STD 
(
SID int primary key, 
SNAME varchar(20),
MOBILE varchar(20), 
GENDER varchar(20),
FACULTY varchar(20),
DEPT varchar(20),
CLASS varchar(20),
HNO int,
RNO int,
constraints studenthno foreign key (HNO) references HOSTEL(HNO),
constraints RNO foreign key (RNO) references ROOM(RNO)
);

INSERT INTO STD() VALUES(101,'Jenish Taniya','2550550','Male','Science','EC','FY-EC',1,11)
INSERT INTO STD() VALUES(101,'Amit Singh','2550550','Male','Science','EC','FY-EC',1,11)
INSERT INTO STD() VALUES(101,'Jalim Patell','2550550','Male','Science','EC','FY-EC',1,11)
INSERT INTO STD() VALUES(101,'Jenish Taniya','2550550','Male','Science','EC','FY-EC',1,11)
INSERT INTO STD() VALUES(101,'Jenish Taniya','2550550','Male','Science','EC','FY-EC',1,11)

**********************************************************************************************************************************
**********************************************************************************************************************************
Create Table FEES (SID int, 
FDATE date, 
FAMOUNT int,
constraint sid foreign key references STD(SID)
);



**********************************************************************************************************************************
**********************************************************************************************************************************
